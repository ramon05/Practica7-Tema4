@model EmpleadoCrudMvcModels.Models.Empleado

@{
	ViewBag.Title = "Create";
}

<h2>Create</h2>

@Html.ValidationSummary(true, "", new { @class = "text-danger" })
@using (Html.BeginForm())
{
	@Html.AntiForgeryToken()

	<div class="form-horizontal">
		<h4>Empleado</h4>
		<hr />

		<div class="form-group">
			@Html.LabelFor(model => model.nombre, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.nombre, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.nombre, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.apellido, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.apellido, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.apellido, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.telefono, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.telefono, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.telefono, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.cedula, htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control" } })
				@Html.ValidationMessageFor(model => model.cedula, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			@Html.LabelFor(model => model.departamento, "departamento", htmlAttributes: new { @class = "control-label col-md-2" })
			<div class="col-md-10">
				@Html.DropDownList("departamento", null, htmlAttributes: new { @class = "form-control" })
				@Html.ValidationMessageFor(model => model.departamento, "", new { @class = "text-danger" })
			</div>
		</div>

		<div class="form-group">
			<div class="col-md-offset-2 col-md-10">
				<input type="submit" value="Create" class="btn btn-success" />
			</div>
		</div>
	</div>
}

<div>
	@Html.ActionLink("Back to List", "Index",null, new {@class="btn btn-primary" })
</div>

@section Scripts {
	@Scripts.Render("~/bundles/jqueryval")
}
